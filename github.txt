We have 2 big branch call master (to hold test feature for test site) and production

1. When we are creating new feature , what branch should we based on and why ?

 - We should checkout from the production branch because production is the most stable branch.
The code on that branch is safe to code a new feature

2. If we have a feature branch that haven't been merged to production and that branch have bug, what course of action are you going to do with Git to before resolving the bug?

 - git checkout "branch's name" : to fix the bug on that branch

3. If someone accidentally merge a feature (feature/delete-user) onto production and 
have a list of commitId ended with (0492978, fc9348c, k101100), 
then another commit (a1fsas8) is added on top of the production branch. How do we remove that merged feature? 

 - git log --oneline : to get the commit id which is the base of those merged commits
 - git rebase -i < the commit id before the branches diverged >
 A editor file will appears and we need to write "d" to the commit we want do remove then save the file.
 If commit (a1fsas8) base on those merged commits we have to resolve conflict. 
 - git add .
 - git rebase --continue.